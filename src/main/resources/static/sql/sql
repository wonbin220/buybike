create table member(
num bigint primary key auto_increment,
memberId varchar(50) not null,
memberName varchar(10) not null,
password varchar(200),
phone varchar(100),
email varchar(100),
address varchar(200),
regDt datetime default now(),
role ENUM('ADMIN', 'USER') not null default 'USER'
);


CREATE Table `board` (
    `no`            BIGINT          AUTO_INCREMENT PRIMARY KEY  COMMENT 'PK',
    `id`            VARCHAR(64)     UNIQUE                      COMMENT 'UK',
    `title`         VARCHAR(100)    NOT NULL                    COMMENT '제목',
    `memberId`        VARCHAR(50)    NOT NULL                    COMMENT '작성자',
    `content`       TEXT            NULL                        COMMENT '내용',
    `created_at`    TIMESTAMP       DEFAULT CURRENT_TIMESTAMP   COMMENT '등록일자',
    `updated_at`    TIMESTAMP       DEFAULT CURRENT_TIMESTAMP
                                            ON UPDATE CURRENT_TIMESTAMP
                                                                COMMENT '수정일자',
   foreign key(memberId) references member(memberId)
) COMMENT '게시글';


-- 샘플 데이터
TRUNCATE TABLE `board`;

INSERT INTO `board` ( id, title, memberId, content )
SELECT
    UUID() AS id,
    CONCAT('제목 ', LPAD(n, 4, '0')) AS title,
    CONCAT('작성자 ', LPAD(n, 4, '0')) AS memberId,
    CONCAT('내용 ', LPAD(n, 4, '0')) AS content
FROM
    (
        -- 1~1000 까지
        WITH RECURSIVE seq AS (
            SELECT 1 AS n
            UNION ALL
            SELECT n + 1 FROM seq WHERE n < 1000
        )
        SELECT n FROM seq
    ) AS numbers
;

CREATE TABLE comment (
    comment_no BIGINT AUTO_INCREMENT PRIMARY KEY,      -- 댓글 번호 (PK)
    board_no   BIGINT NOT NULL,                         -- 게시글 번호 (FK)
    parent_no  BIGINT,                                  -- 부모 댓글 번호 (계층 구조)
    depth      INT NOT NULL DEFAULT 1,                  -- 댓글 깊이
    content    TEXT NOT NULL,                           -- 내용
    writer_id  VARCHAR(50) NOT NULL,                    -- 작성자 ID
    is_deleted BOOLEAN NOT NULL DEFAULT FALSE,          -- 삭제 여부
    is_secret  BOOLEAN NOT NULL DEFAULT FALSE,          -- 비밀글 여부
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,     -- 생성일
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- 수정일
    FOREIGN KEY (board_no) REFERENCES board(no) ON DELETE CASCADE,
    FOREIGN KEY (parent_no) REFERENCES comment(comment_no) ON DELETE CASCADE
);
