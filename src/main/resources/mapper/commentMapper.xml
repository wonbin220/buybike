<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.buybike.app.repository.CommentMapper">

    <!-- 특정 게시글의 댓글 목록 조회 -->
    <select id="findByBoardNo" resultType="com.buybike.app.domain.Comment">
        SELECT
            comment_no, board_no, parent_no, depth, content,
            writer_id, is_deleted, is_secret, created_at
        FROM
            comment
        WHERE
            board_no = #{boardNo}
        ORDER BY
            -- 최상위 댓글(parent_no IS NULL)을 먼저 정렬하고,
            -- 그 다음 자식 댓글들을 순서대로 정렬합니다.
            COALESCE(parent_no, comment_no), comment_no
    </select>

    <!-- 댓글 번호로 댓글 조회 -->
    <select id="findByCommentNo" resultType="com.buybike.app.domain.Comment">
        SELECT
            comment_no, board_no, parent_no, depth, content,
            writer_id, is_deleted, is_secret, created_at
        FROM
            comment
        WHERE
            comment_no = #{commentNo}
    </select>

    <!-- 댓글 저장 -->
    <insert id="save" useGeneratedKeys="true" keyProperty="commentNo" parameterType="com.buybike.app.domain.Comment">
        INSERT INTO comment (board_no, parent_no, depth, content, writer_id, is_secret)
        VALUES (#{boardNo}, #{parentNo}, #{depth}, #{content}, #{writerId}, #{isSecret})
    </insert>


    <!-- 댓글 삭제 (논리적 삭제) -->
    <update id="softDelete">
        UPDATE comment
        SET
            is_deleted = TRUE,
            content = '삭제된 댓글입니다.'
        WHERE
            comment_no = #{commentNo}
    </update>

    <!--
    - WHERE 절에 is_deleted = FALSE 조건을 추가하여
        논리적으로 삭제된 댓글은 수정되지 않도록 방지합니다.
        -->
    <update id="update" parameterType="com.buybike.app.domain.Comment">
        UPDATE comment
        SET content = #{content},
            is_secret = #{isSecret},
            updated_at = NOW()
        WHERE comment_no = #{commentNo}
          AND is_deleted = FALSE
    </update>


    <!--
      댓글 단건 조회를 위한 select 구문
      - id는 CommentMapper.java 인터페이스의 메소드 이름(findById)과 일치해야 합니다.
      - resultType은 조회 결과를 매핑할 객체의 전체 경로입니다.
    -->
    <select id="findById" parameterType="long" resultType="com.buybike.app.domain.Comment">
        SELECT
            comment_no,
            board_no,
            parent_no,
            content,
            writer_id,
            is_secret,
            is_deleted,
            created_at,
            updated_at,
            depth
        FROM
            comment
        WHERE
            comment_no = #{commentNo}
    </select>


    <!-- 특정 게시글의 활성 댓글 수 조회 -->
    <select id="countByBoardNo" parameterType="long" resultType="int">
        SELECT COUNT(*)
        FROM comment
        WHERE board_no = #{boardNo}
          AND is_deleted = FALSE
    </select>
</mapper>